#!/usr/bin/env python

PACKAGE='rotors_exercise'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

onoff_enum          = gen.enum([gen.const("Off",                    str_t, "Off",        "Off"),
                                gen.const("On",                     str_t, "On",         "On") ],
                                "On or Off")

gen.add("gravity_compensation",  double_t,  0, "gravity_compensation", 15.0, 10.0, 20.0)
gen.add("integral_window_enable",bool_t,    0, "integral_window_enable", False)

gen.add("x_kp",                  double_t,  0, "x_kp", 0.2, 0.0, 5)
gen.add("x_ki",                  double_t,  0, "x_ki", 0.0, 0.0, 5)
gen.add("x_kd",                  double_t,  0, "x_kd", 0.4, 0.0, 5)
gen.add("x_integral_limit",      double_t,  0, "x_integral_limit", 0.1, 0.0, 0.5)
gen.add("x_integral_window_size",int_t,     0, "x_integral_window_size", 500, 0, 10000)

gen.add("y_kp",                  double_t,  0, "y_kp", 0.2, 0.0, 5)
gen.add("y_ki",                  double_t,  0, "y_ki", 0.0, 0.0, 5)
gen.add("y_kd",                  double_t,  0, "y_kd", 0.4, 0.0, 5)
gen.add("y_integral_limit",      double_t,  0, "y_integral_limit", 0.1, 0.0, 0.5)
gen.add("y_integral_window_size",int_t,     0, "y_integral_window_size", 1000, 0, 10000)

gen.add("z_kp",                  double_t,  0, "z_kp", 1, 0.0, 5)
gen.add("z_ki",                  double_t,  0, "z_ki", 0, 0.0, 5)
gen.add("z_kd",                  double_t,  0, "z_kd", 0.2,0.0, 5)
gen.add("z_integral_limit",      double_t,  0, "z_integral_limit", 0.04, 0.0, 0.5)
gen.add("z_integral_window_size",int_t,     0, "z_integral_window_size", 1000, 0, 10000)

gen.add("yaw_kp",                double_t,  0, "yaw_kp", 0.4, 0.0, 1.0)
gen.add("yaw_ki",                double_t,  0, "yaw_ki", 0.0, 0.0, 1)
gen.add("yaw_kd",                double_t,  0, "yaw_kd", 0.2, 0.0, 1)
gen.add("yaw_integral_limit",    double_t,  0, "yaw_integral_limit", 0.5, 0.0, 1.0)
gen.add("yaw_integral_window_size", int_t,  0, "yaw_integral_window_size", 500, 0, 10000)

gen.add("roll_limit",            double_t,  0, "roll_limit",  1, 0.0, 2.0)
gen.add("pitch_limit",           double_t,  0, "pitch_limit", 1, 0.0, 2.0)
gen.add("thrust_limit",          double_t,  0, "thrust_limit",1, 0.0, 2.0)
gen.add("yaw_limit",             double_t,  0, "yaw_limit",   1, 0.0, 2)

exit(gen.generate(PACKAGE, "rotors_exercise", "Controller"))
